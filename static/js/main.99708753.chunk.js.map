{"version":3,"sources":["components/Header.tsx","contexts/AppReducer.tsx","contexts/GlobulState.tsx","components/Balance.tsx","components/IncomeAddTransaction.tsx","components/ExpenseAddTransaction.tsx","components/AddTransaction.tsx","components/IncomeTransaction.tsx","components/IncomeList.tsx","components/ExpenseTransaction.tsx","components/ExpenseList.tsx","App.tsx","index.tsx"],"names":["Header","className","state","action","type","incomeTransactions","payload","expenseTransactions","filter","incomeTransaction","id","expenseTransaction","initialState","incomeText","incomeAmount","expenseText","expenseAmount","addIncome","addExpense","deleteTransaction","GlobalContext","createContext","GlobalContextProvider","children","useReducer","AppReducer","dispatch","useEffect","localStorage","setItem","JSON","stringify","Provider","value","Balance","useContext","incomeAmounts","map","expenseAmounts","totalIncome","reduce","acc","curr","toFixed","totalExpense","result","Number","initialValues","inputShema","Yup","shape","required","IncomeAddTransaction","onSubmit","newIncomeTransaction","uuidv4","validationSchema","dirty","isValid","handleBlur","values","handleChange","placeholder","name","autoComplete","onBlur","onChange","disabled","ExpenseAddTransaction","newExpenseTransaction","AddTransaction","IncomeTransaction","onClick","IncomeList","key","ExpenseTransaction","ExpenseList","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99708753.chunk.js","sourcesContent":["import React, { ReactElement } from 'react'\r\n\r\nconst Header = ():ReactElement => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Budget App</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import { IincomeTransaction, IexpenseTransaction } from \"./GlobulState\";\r\n\r\ntype Appstate = {\r\n  incomeTransactions: IincomeTransaction[];\r\n  expenseTransactions: IexpenseTransaction[],\r\n}\r\n\r\ntype Actions =\r\n  | {\r\n    type: \"ADD_INCOME\";\r\n    payload: IincomeTransaction,\r\n    }\r\n| {\r\n    type: \"ADD_EXPENSE\";\r\n    payload: IexpenseTransaction;\r\n  }\r\n  | {\r\n    type: \"DELETE_TRANSACTION\";\r\n    payload: string;\r\n  };\r\n\r\n\r\nexport default (state:Appstate, action:Actions) => {\r\n\r\n  \r\n    switch (action.type) {\r\n        case 'ADD_INCOME':\r\n            return {\r\n                ...state,\r\n                incomeTransactions: [action.payload, ...state.incomeTransactions]\r\n            };\r\n            case 'ADD_EXPENSE':\r\n                return {\r\n                    ...state,\r\n                    expenseTransactions:[action.payload, ...state.expenseTransactions]\r\n            }\r\n            case \"DELETE_TRANSACTION\":\r\n                return {\r\n                  ...state,\r\n                  incomeTransactions: state.incomeTransactions.filter(\r\n                    (incomeTransaction) => incomeTransaction.id !== action.payload\r\n                  ),\r\n                  expenseTransactions: state.expenseTransactions.filter(\r\n                    (expenseTransaction) => expenseTransaction.id !== action.payload\r\n                  )\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {\r\n  createContext,\r\n  useReducer,\r\n  useEffect,\r\n  ReactNode,\r\n  ReactElement,\r\n} from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nexport interface IincomeTransaction {\r\n  id: string;\r\n  incomeText: string;\r\n  incomeAmount: number;\r\n}\r\n\r\nexport interface IexpenseTransaction {\r\n  id: string;\r\n  expenseText: string;\r\n  expenseAmount: number;\r\n}\r\n\r\nexport type InitialState = {\r\n  incomeTransactions: IincomeTransaction[];\r\n  expenseTransactions: IexpenseTransaction[];\r\n  addIncome: (incomeTransaction: IincomeTransaction) => void;\r\n  addExpense: (expenseTransaction: IexpenseTransaction) => void;\r\n  deleteTransaction: (id: string) => void;\r\n};\r\n\r\n// const initialState = {\r\n//   incomeTransactions: JSON.parse(localStorage.getItem(\"incomeTransactions\")) || [],\r\n//   expenseTransactions:JSON.parse(localStorage.getItem(\"expenseTransactions\")) || [],\r\n//   addIncome: (incomeTransaction: IincomeTransaction) => {},\r\n//   addExpense: (expenseTransaction: IexpenseTransaction) => {},\r\n//   deleteTransaction: (id:string) => {},\r\n// };\r\n\r\nconst initialState = {\r\n  incomeTransactions:[{id:\"1\", incomeText: 'Salary', incomeAmount:2000}, {id:\"9\", incomeText:\"Rent\", incomeAmount: 500}],\r\n  expenseTransactions:[{id:\"2\", expenseText: 'Car Wash', expenseAmount: 25}],\r\n  addIncome: (incomeTransaction: IincomeTransaction) => {},\r\n  addExpense: (expenseTransaction: IexpenseTransaction) => {},\r\n  deleteTransaction: (id:string) => {},\r\n};\r\n\r\nexport const GlobalContext = createContext<InitialState>(initialState);\r\n\r\nexport const GlobalContextProvider = ({\r\n  children,\r\n}: {\r\n  children: ReactNode;\r\n}): ReactElement => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\r\n      \"incomeTransactions\",\r\n      JSON.stringify(state.incomeTransactions)\r\n    );\r\n    localStorage.setItem(\r\n      \"expenseTransactions\",\r\n      JSON.stringify(state.expenseTransactions)\r\n    );\r\n  });\r\n\r\n  const addIncome = (incomeTransaction: IincomeTransaction)=> {\r\n    dispatch({\r\n      type: \"ADD_INCOME\",\r\n      payload: incomeTransaction,\r\n    });\r\n  };\r\n  const addExpense = (expenseTransaction: IexpenseTransaction)=> {\r\n    dispatch({\r\n      type: \"ADD_EXPENSE\",\r\n      payload: expenseTransaction,\r\n    });\r\n  };\r\n  const deleteTransaction = (id: string) => {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    });\r\n  };\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        incomeTransactions: state.incomeTransactions,\r\n        expenseTransactions: state.expenseTransactions,\r\n        addIncome,\r\n        addExpense,\r\n        deleteTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, {useContext, ReactElement} from \"react\";\r\nimport {GlobalContext, IincomeTransaction, IexpenseTransaction } from '../contexts/GlobulState';\r\n\r\n\r\nconst Balance = ():ReactElement => {\r\n  const { incomeTransactions, expenseTransactions } = useContext(GlobalContext);\r\n  const incomeAmounts = incomeTransactions.map((incomeTransaction:IincomeTransaction) =>\r\n    incomeTransaction.incomeAmount); \r\n    const expenseAmounts = expenseTransactions.map((expenseTransaction:IexpenseTransaction) =>\r\n      expenseTransaction.expenseAmount); \r\n  \r\n  const totalIncome = incomeAmounts.reduce((acc:number, curr:number) => (\r\n    acc +=curr\r\n  ), 0).toFixed(2);\r\n  \r\n  const totalExpense = expenseAmounts.reduce((acc:number, curr:number) => (\r\n    acc +=curr\r\n  ), 0).toFixed(2);\r\n  \r\n  const result = (Number(totalIncome) - Number(totalExpense)).toFixed(2);\r\n  return (\r\n    <div className=\"balance\">\r\n      <h2>Your balance</h2>\r\n      <h3>${result}</h3>\r\n      <div className=\"income-expense\">\r\n        <div className=\"plus\">\r\n          <h3>Income</h3>\r\n          <p>+${totalIncome}</p>\r\n        </div>\r\n        <div className=\"minus\">\r\n          <h3>Expenses</h3>\r\n          <p>-${totalExpense}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React, {useContext, ReactElement } from \"react\";\r\nimport { Formik, Form, ErrorMessage, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { GlobalContext } from \"../contexts/GlobulState\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst initialValues = {\r\n  id: '',\r\n  incomeText: '',\r\n  incomeAmount: 0,\r\n}\r\nconst inputShema = Yup.object().shape({\r\n  incomeText: Yup.string().required(),\r\n  incomeAmount: Yup.number().required()\r\n});\r\n\r\nconst IncomeAddTransaction = (): ReactElement => {\r\n   const { addIncome } = useContext(GlobalContext);\r\n  return (\r\n    <Formik\r\n      onSubmit={({incomeText, incomeAmount}) => {\r\n        const newIncomeTransaction = {\r\n            id: uuidv4(),\r\n            incomeText,\r\n            incomeAmount: incomeAmount * 1,\r\n            };\r\n        addIncome(newIncomeTransaction);\r\n      }}\r\n      validationSchema={inputShema}\r\n      initialValues={initialValues}\r\n    >\r\n      {({dirty, isValid, handleBlur , values, handleChange}) => (\r\n        <Form>\r\n          <div className=\"input-group income\">\r\n            <div>\r\n              <Field\r\n                type=\"text\"\r\n                placeholder=\"Add income...\"\r\n                name=\"incomeText\"\r\n                value={values.incomeText}\r\n                autoComplete=\"off\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n\r\n                          />\r\n              <ErrorMessage name=\"incomeText\" />\r\n            </div>\r\n            <div>\r\n              <Field\r\n                type=\"number\"\r\n                placeholder=\"Amount\"\r\n                name=\"incomeAmount\"\r\n                autoComplete=\"off\"\r\n                value={values.incomeAmount}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                \r\n              />\r\n              <ErrorMessage name=\"incomeAmount\" />\r\n            </div>\r\n            <button type=\"submit\" value=\"submit\" disabled={! dirty || !isValid}>\r\n              Subit\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default IncomeAddTransaction;\r\n","import React, { useContext } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Formik, ErrorMessage, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { GlobalContext } from \"../contexts/GlobulState\";\r\n\r\nconst inputShema = Yup.object().shape({\r\n  expenseText: Yup.string().required(),\r\n  expenseAmount: Yup.number().required(),\r\n});\r\nconst initialValues = {\r\n  id: \"\",\r\n  expenseText: \"\",\r\n  expenseAmount: 0,\r\n};\r\nconst ExpenseAddTransaction = () => {\r\n  const { addExpense } = useContext(GlobalContext);\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={inputShema}\r\n      onSubmit={({ expenseText, expenseAmount }) => {\r\n        const newExpenseTransaction = {\r\n          id: uuidv4(),\r\n          expenseText,\r\n          expenseAmount: expenseAmount * 1,\r\n        };\r\n        addExpense(newExpenseTransaction);\r\n      }}\r\n    >\r\n      {({ dirty, isValid, handleBlur, handleChange, values }) => (\r\n        <Form>\r\n          <div className=\"input-group expense\">\r\n            <div>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"expenseText\"\r\n                placeholder=\"Add Expence...\"\r\n                value={values.expenseText}\r\n                autoComplete=\"off\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n              />\r\n              <ErrorMessage name=\"expenseText\" />\r\n            </div>\r\n            <div>\r\n              <Field\r\n                type=\"number\"\r\n                name=\"expenseAmount\"\r\n                placeholder=\"Amount\"\r\n                value={values.expenseAmount}\r\n                autoComplete=\"off\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n              />\r\n              <ErrorMessage name=\"expenseAmount\" />\r\n            </div>\r\n\r\n            <button type=\"submit\" value=\"submit\" disabled={!dirty || !isValid}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ExpenseAddTransaction;\r\n","import React, {ReactElement} from 'react';\r\nimport IncomeAddTransaction from './IncomeAddTransaction';\r\nimport ExpenseAddTransaction from './ExpenseAddTransaction';\r\n\r\n\r\nconst AddTransaction = ():ReactElement => {\r\n   \r\n    return (\r\n        <div className=\"form-wrapper\">      \r\n        <IncomeAddTransaction/>\r\n        <ExpenseAddTransaction/>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTransaction;\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext, IincomeTransaction } from '../contexts/GlobulState';\r\n\r\nexport const IncomeTransaction:React.FC<{incomeTransaction:IincomeTransaction}> = ({incomeTransaction }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    return (\r\n        <li className=\"transaction\">\r\n        <span className=\"transaction-text\">{incomeTransaction.incomeText}</span>\r\n    <span className=\"transaction-amount\">\r\n        ${incomeTransaction.incomeAmount} </span> \r\n            <button className=\"delete-btn\" onClick={()=> deleteTransaction(incomeTransaction.id)}> \r\n        <i className=\"fas fa-trash\"></i>\r\n    </button>\r\n</li>   \r\n    )\r\n}\r\nexport default IncomeTransaction;","import React, {useContext, ReactElement} from 'react';\r\nimport {GlobalContext, IincomeTransaction} from '../contexts/GlobulState';\r\nimport IncomeTransaction from './IncomeTransaction';\r\n\r\nconst IncomeList = ():ReactElement => {\r\n    const { incomeTransactions } = useContext(GlobalContext);\r\n    return (\r\n        <div className=\"transactions transactions-income\">\r\n            <h2>Transaction History</h2>\r\n            <ul className=\"transaction-list\">\r\n                {incomeTransactions.map((incomeTransaction:IincomeTransaction) => (\r\n                    <IncomeTransaction key={incomeTransaction.id} incomeTransaction={incomeTransaction} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default IncomeList;\r\n","import React, { useContext } from 'react';\r\nimport {GlobalContext, IexpenseTransaction } from '../contexts/GlobulState';\r\n\r\nconst ExpenseTransaction: React.FC<{ expenseTransaction: IexpenseTransaction }> = ({ expenseTransaction}) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    return (\r\n        <li className=\"transaction\">\r\n            <span className=\"transaction-text\">{expenseTransaction.expenseText}</span>\r\n        <span className=\"transaction-amount\">\r\n                ${expenseTransaction.expenseAmount} </span> \r\n            <button className=\"delete-btn\" onClick={() => deleteTransaction(expenseTransaction.id)}>\r\n            <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n    </li>\r\n    )\r\n}\r\n\r\nexport default ExpenseTransaction;\r\n","import React, {useContext, ReactElement} from 'react';\r\nimport {GlobalContext, IexpenseTransaction} from '../contexts/GlobulState';\r\nimport ExpenseTransaction from './ExpenseTransaction';\r\n\r\nconst ExpenseList = ():ReactElement => {\r\n    const { expenseTransactions } = useContext(GlobalContext);\r\n    return (\r\n        <div className=\"transactions transactions-expense\">\r\n            <h2>Transaction History</h2>\r\n            <ul className=\"transaction-list\">\r\n                {expenseTransactions.map((expenseTransaction:IexpenseTransaction) => (\r\n                    <ExpenseTransaction key={expenseTransaction.id} expenseTransaction={expenseTransaction}/>\r\n                ))}\r\n            </ul>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseList;\r\n","import React, { ReactElement } from 'react'\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Balance from './components/Balance';\r\nimport AddTransaction from './components/AddTransaction';\r\nimport IncomeList from './components/IncomeList';\r\nimport ExpenseList from './components/ExpenseList';\r\nimport { GlobalContextProvider } from './contexts/GlobulState';\r\n\r\nconst App = ():ReactElement => {\r\n    return (\r\n        <GlobalContextProvider>\r\n\r\n        <div className=\"container\">\r\n            <div className=\"app-wrapper\">\r\n                <Header />\r\n                <Balance />\r\n                <AddTransaction />\r\n                <IncomeList />\r\n                <ExpenseList/>\r\n            </div>\r\n        </div>\r\n        </GlobalContextProvider>\r\n    )\r\n};\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />, document.getElementById('root')\r\n);"],"sourceRoot":""}